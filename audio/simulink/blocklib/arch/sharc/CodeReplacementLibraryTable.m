function hLib = CodeReplacementLibraryTable

thisFile = mfilename('fullpath');
[thisPath, f, e] = fileparts(thisFile);

hLib = RTW.TflTable;
%---------- entry: fir_even ----------- 
hEnt = createCRLEntry(hLib, ...
    'single y1[1 1; 256 256] = fir_even( single u1[1 1; 256 256], uint32 u2, uint32 u3, single u4[1 1; 1024 1024], uint32 u5, uint32 u6, uint32 u7[1 1; 64 64], single u8[1 1; 1024 1024] )', ...
    'void unused = FirEvenSplitProcess( single* y1, single* u1, uint32 u2, uint32 u3, single* u4, uint32 u5, uint32* u6, uint32* u7, single* u8 )');
hEnt.setTflCFunctionEntryParameters( ...
          'Priority', 100, ...
          'ImplementationHeaderFile', 'fir_even.h', ...
          'ImplementationSourceFile', 'FirEvenSharc.asm', ...
          'ImplementationHeaderPath', fullfile(thisPath, 'inc'), ...
          'ImplementationSourcePath', fullfile(thisPath, 'src'), ...
          'GenCallback', 'RTW.copyFileToBuildDir', ...
          'SideEffects', true);

%   Copyright 2019 Bose Corporation


hLib.addEntry( hEnt ); 

%---------- entry: fir_even ----------- 
hEnt = createCRLEntry(hLib, ...
    'single y1[1 1; 256 256] = fir_even( single u1[1 1; 256 256], uint32 u2, uint32 u3, single u4[1 1; 1024 1024], uint32 u5, uint32 u6, uint32 u7, single u8[1 1; 1024 1024] )', ...
    'void unused = FirEvenSplitProcess( single* y1, single* u1, uint32 u2, uint32 u3, single* u4, uint32 u5, uint32* u6, uint32* u7, single* u8 )');
hEnt.setTflCFunctionEntryParameters( ...
          'Priority', 100, ...
          'ImplementationHeaderFile', 'fir_even.h', ...
          'ImplementationSourceFile', 'FirEvenSharc.asm', ...
          'ImplementationHeaderPath', fullfile(thisPath, 'inc'), ...
          'ImplementationSourcePath', fullfile(thisPath, 'src'), ...
          'GenCallback', 'RTW.copyFileToBuildDir', ...
          'SideEffects', true);

hLib.addEntry( hEnt ); 


%---------- entry: pooliir ----------- 
hEnt = createCRLEntry(hLib, ...
    'single y1[1 1; 1024 1024] = pooliir( single u1[1 1; 1024 1024], uint32 u2, uint32 u3, uint32 u4[1 1; 128 128], single u5[1 1; 8192 8192], single u6[1 1; 2048 2048] )', ...
    'void unused = pooliirSplitProcess( single* y1, single* u1, uint32 u2, uint32 u3, const uint32* u4, const single* u5, single* u6 )');
hEnt.setTflCFunctionEntryParameters( ...
          'Priority', 100, ...
          'ImplementationHeaderFile', 'pooliirSplit.h', ...
          'ImplementationSourceFile', 'pooliirProcessSharc.asm', ...
          'ImplementationHeaderPath', fullfile(thisPath, 'inc'), ...
          'ImplementationSourcePath', fullfile(thisPath, 'src'), ...
          'GenCallback', 'RTW.copyFileToBuildDir', ...
          'SideEffects', true);



hLib.addEntry( hEnt ); 

%---------- entry: pooliir ----------- 
hEnt = createCRLEntry(hLib, ...
    'single y1[1 1; 1024 1024] = pooliir( single u1[1 1; 1024 1024], uint32 u2, uint32 u3, uint32 u4, single u5[1 1; 8192 8192], single u6[1 1; 2048 2048] )', ...
    'void unused = pooliirSplitProcess( single* y1, single* u1, uint32 u2, uint32 u3, const uint32* u4, const single* u5, single* u6 )');
hEnt.setTflCFunctionEntryParameters( ...
          'Priority', 100, ...
          'ImplementationHeaderFile', 'pooliirSplit.h', ...
          'ImplementationSourceFile', 'pooliirProcessSharc.asm', ...
          'ImplementationHeaderPath', fullfile(thisPath, 'inc'), ...
          'ImplementationSourcePath', fullfile(thisPath, 'src'), ...
          'GenCallback', 'RTW.copyFileToBuildDir', ...
          'SideEffects', true);



hLib.addEntry( hEnt ); 

%---------- entry: copysignf ----------- 
hEnt = createCRLEntry(hLib, ...
    'single y1 = copysignf( single u1, single u2 )', ...
    'single y1 = copysignf( single u1, single u2 )');
hEnt.setTflCFunctionEntryParameters( ...
          'Priority', 100, ...
          'ImplementationHeaderFile', 'math.h');



hLib.addEntry( hEnt ); 

%---------- entry: fix ----------- 
hEnt = createCRLEntry(hLib, ...
    'single y1 = fix( single u1 )', ...
    'single y1 = truncf( single u1 )');
hEnt.setTflCFunctionEntryParameters( ...
          'Priority', 100, ...
          'ImplementationHeaderFile', 'adi_missing_math_functions.h', ...
          'ImplementationHeaderPath', fullfile(thisPath, 'inc'), ...
          'GenCallback', 'RTW.copyFileToBuildDir');



hLib.addEntry( hEnt ); 

%---------- entry: round ----------- 
hEnt = createCRLEntry(hLib, ...
    'single y1 = round( single u1 )', ...
    'single y1 = roundf( single u1 )');
hEnt.setTflCFunctionEntryParameters( ...
          'Priority', 100, ...
          'ImplementationHeaderFile', 'adi_missing_math_functions.h', ...
          'ImplementationHeaderPath', fullfile(thisPath, 'inc'), ...
          'GenCallback', 'RTW.copyFileToBuildDir');



hLib.addEntry( hEnt ); 

%---------- entry: IFIR ----------- 
hEnt = createCRLEntry(hLib, ...
    'single y1[1 1; 256 256] = IFIR( single u1[1 1; 256 256], uint32 u2, uint32 u3, single u4[1 1; 1024 1024], int32 u5, int32 u6, single u7[1 1; 1024 1024], uint32 u8[1 1; 64 64], int32 u9 )', ...
    'void unused = IFirProcess( single* y1, single* u1, uint32 u2, uint32 u3, single* u4, int32 u5, int32* u6, const single* u7, uint32* u8, int32 u9 )');
hEnt.setTflCFunctionEntryParameters( ...
          'Priority', 100, ...
          'ImplementationHeaderFile', 'IFir.h', ...
          'ImplementationSourceFile', 'IFirProcessSharc.asm', ...
          'ImplementationHeaderPath', fullfile(thisPath, 'inc'), ...
          'ImplementationSourcePath', fullfile(thisPath, 'src'), ...
          'GenCallback', 'RTW.copyFileToBuildDir', ...
          'SideEffects', true);



hLib.addEntry( hEnt ); 

%---------- entry: IFIR ----------- 
hEnt = createCRLEntry(hLib, ...
    'single y1[1 1; 256 256] = IFIR( single u1[1 1; 256 256], uint32 u2, uint32 u3, single u4[1 1; 1024 1024], int32 u5, int32 u6, single u7[1 1; 1024 1024], uint32 u8, int32 u9 )', ...
    'void unused = IFirProcess( single* y1, single* u1, uint32 u2, uint32 u3, single* u4, int32 u5, int32* u6, const single* u7, uint32* u8, int32 u9 )');
hEnt.setTflCFunctionEntryParameters( ...
          'Priority', 100, ...
          'ImplementationHeaderFile', 'IFir.h', ...
          'ImplementationSourceFile', 'IFirProcessSharc.asm', ...
          'ImplementationHeaderPath', fullfile(thisPath, 'inc'), ...
          'ImplementationSourcePath', fullfile(thisPath, 'src'), ...
          'GenCallback', 'RTW.copyFileToBuildDir', ...
          'SideEffects', true);



hLib.addEntry( hEnt ); 

%---------- entry: circindex ----------- 
hEnt = createCRLEntry(hLib, ...
    'int32 y1 = circindex( int32 u1, int32 u2, int32 u3 )', ...
    'int32 y1 = circindex( int32 u1, int32 u2, int32 u3 )');
hEnt.setTflCFunctionEntryParameters( ...
          'Priority', 100, ...
          'SideEffects', true, ...
          'ImplementationHeaderFile', 'builtins.h');

hLib.addEntry( hEnt ); 

%---------- entry: cfft_f ----------- 
hEnt = createCRLEntry(hLib, ...
    'csingle y1[1 1; 1024 1024] = cfft_f( csingle u1[1 1; 1024 1024], csingle u2[1 1; 1024 1024], uint32 u3, uint32 u4, int32 u5 )', ...
    'void unused = cfft_process( csingle* y1, csingle* u1, csingle* u2, uint32 u3, uint32 u4, int32 u5  )');
hEnt.setTflCFunctionEntryParameters( ...
          'Priority', 100, ...
          'ImplementationHeaderFile', 'cfft.h', ...
          'ImplementationSourceFile', 'cfftProcessSharc.c', ...
          'ImplementationHeaderPath',  fullfile(thisPath, 'inc'), ...
          'ImplementationSourcePath',  fullfile(thisPath, 'src'), ...
          'GenCallback', 'RTW.copyFileToBuildDir', ...
          'AdditionalHeaderFiles', { ...
                'twiddle.h'}, ...
          'AdditionalIncludePaths', {fullfile(thisPath,'inc')}, ...
          'AdditionalSourceFiles', { ...
                'twiddle_256.c'}, ...
          'AdditionalSourcePaths', {fullfile(thisPath,'src')}, ...
          'SideEffects', true);


hLib.addEntry( hEnt ); 

%---------- entry: cifft_f ----------- 
hEnt = createCRLEntry(hLib, ...
    'csingle y1[1 1; 1024 1024] = cifft_f( csingle u1[1 1; 1024 1024], csingle u2[1 1; 1024 1024], uint32 u3, uint32 u4, int32 u5 )', ...
    'void unused = cifft_process( csingle* y1, csingle* u1, csingle* u2, uint32 u3, uint32 u4, int32 u5 )');
hEnt.setTflCFunctionEntryParameters( ...
          'Priority', 100, ...
          'ImplementationHeaderFile', 'cifft.h', ...
          'ImplementationSourceFile', 'cifftProcessSharc.c', ...
          'ImplementationHeaderPath',  fullfile(thisPath, 'inc'), ...
          'ImplementationSourcePath',  fullfile(thisPath, 'src'), ...
          'GenCallback', 'RTW.copyFileToBuildDir', ...
          'AdditionalHeaderFiles', { ...
                'twiddle.h'}, ...
          'AdditionalIncludePaths', {fullfile(thisPath,'inc')}, ...
          'AdditionalSourceFiles', { ...
                'twiddle_256.c'}, ...
          'AdditionalSourcePaths', {fullfile(thisPath,'src')}, ...
          'SideEffects', true);


hLib.addEntry( hEnt ); 

