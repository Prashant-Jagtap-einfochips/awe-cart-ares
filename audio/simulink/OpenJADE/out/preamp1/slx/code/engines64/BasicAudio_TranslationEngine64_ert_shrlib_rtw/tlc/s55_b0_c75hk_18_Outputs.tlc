%implements s55_b0_c75hk_18_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign _modelSS = ""

%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[15], "Output",0)
/* MATLAB Function: '<S80>/tone filter tune translate3' */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S92>:1' */
/* '<S92>:1:3' f(); */
%if SLibCG_SystemFcnArgAccessed("BasicAudio_TranslationEngine64_tonefiltertunetranslate3",15,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[d940e*/",SLibCGIRGenReusableSysCall("BasicAudio_TranslationEngine64_tonefiltertunetranslate3", ["%<_modelSS>", "&/*@>d9482*/BasicAudio_TranslationEngine64_B./*@>d9481*/BoostMaximum_dB", "&/*@>d948f*/BasicAudio_TranslationEngine64_B./*@>d948e*/sf_tonefiltertunetranslate3_fg"], 15, 2, 6, 0, 6, 50),"/*@]*/")>\
%assign ss = ::CompiledModel.System[15]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_BasicAudio_2345_236_174(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(18, 0, fcnProtoType)>
%endfunction
