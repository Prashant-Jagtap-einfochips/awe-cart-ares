%implements s2_b0_h85hk_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* MATLAB Function: '<S2>/TrivialInterpretation' */
/*  This function serves only to invoke a function trigger output */
/* MATLAB Function 'InterpretTrigger/ifunc': '<S5>:1' */
/* '<S5>:1:3' f(); */
/*@>1c03*/BasicAudio_InterpretationEngine64_B./*@>1c96*/State/*@>165f*/ = /*@>1c09*/BasicAudio_InterpretationEngine64_B./*@>1c99*/TSP;
/*  Use one or more input Targe State Probes (TSP) or Captured State */
/*  Constants to calculate an output state value that feeds into a StateVar */
/*  block. Unlike tune translation code, this state interpretation code does */
/*  not support variable size inputs - TSPs each have a fixed size. As a */
/*  result, the input signals are just normal signal values that do *not* */
/*  have .Value and .Size fields. No need for a custom bus! */
/* MATLAB Function 'Empty/TrivialInterpretation': '<S4>:1' */
/*  ----- To register an error, use the following method (works like printf): */
/*    InterpretError( <format string>, <arguments ... ) */
/*    ... this error will cause the build process to abort. */
/*  A trivial pass-through interpretation looks like this: */
/* '<S4>:1:16' State = TSP1; */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void BasicAudio_InterpretationEngine64_ifunc(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 0, fcnProtoType)>
%endfunction
