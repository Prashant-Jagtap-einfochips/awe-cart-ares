%implements s55_b0_c75hk_19_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign _modelSS = ""

%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[32], "Output",0)
/* MATLAB Function: '<S80>/tone filter tune translate1' */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S93>:1' */
/* '<S93>:1:3' f(); */
%if SLibCG_SystemFcnArgAccessed("BasicAudio_TranslationEngine64_tonefiltertunetranslate1_d",32,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[d9935*/",SLibCGIRGenReusableSysCall("BasicAudio_TranslationEngine64_tonefiltertunetranslate1_d", ["%<_modelSS>", "&/*@>d99b5*/BasicAudio_TranslationEngine64_B./*@>d99b4*/BoostFrequencyHz", "/*@>d99c1*/BasicAudio_TranslationEngine64_ConstB./*@>d99c0*/CapturedTuneConst", "&/*@>d99ce*/BasicAudio_TranslationEngine64_B./*@>d99cd*/sf_tonefiltertunetranslate1_d"], 32, 0, 6, 0, 6, 50),"/*@]*/")>\
%assign ss = ::CompiledModel.System[32]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_BasicAudio_2345_236_149(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(19, 0, fcnProtoType)>
%endfunction
