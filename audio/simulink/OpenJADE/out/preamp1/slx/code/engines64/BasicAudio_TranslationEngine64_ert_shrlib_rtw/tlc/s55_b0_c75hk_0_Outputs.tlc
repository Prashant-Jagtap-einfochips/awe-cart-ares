%implements s55_b0_c75hk_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/*  %<"\% inputs \% parameters"> */
/* MATLAB Function 'BasicAudio/Bass/Tone/InnerLink/tone filter tune translate3': '<S53>:1' */
/*  Just make sure the maximum is a positive dB value */
/* '<S53>:1:6' maxOut = single(abs(maxIn.Value)); */
/*@>c2359*/localB->/*@>c23c2*/maxOut/*@>bed2d*/ = /*@>bed2e*/(real32_T)/*@>c2303*/fabs(rtu_maxIn->Value);
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 0, 0)>
%endif
%if SLibCG_ArgAccessed(0, 0, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 0, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void BasicAudio_TranslationEngine64_tonefiltertunetranslate3(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 0, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("BasicAudio_TranslationEngine64_tonefiltertunetranslate3", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>const bus_double_1_1 *rtu_maxIn\
%assign comma = ", "
%<comma>B_tonefiltertunetranslate3_BasicAudio_TranslationEngine64_T *localB\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 0, fcnProtoType)>
%endfunction
