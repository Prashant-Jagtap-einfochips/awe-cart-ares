%implements s105_b0_435hk_19_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign _modelSS = ""

%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[8], "Output",0)
/* S-Function (fcgen): '<S139>/Function-Call Generator' incorporates:
 *  SubSystem: '<S139>/LockEnter'
 */
%if SLibCG_SystemFcnArgAccessed("BasicAudio_Target_LockEnter",8,0)
%<SLibCG_AccessArg(19 ,0, 0)>
%endif

%<SLibCG_DumpSSCode("/*@[1644a9*/",SLibCGIRGenReusableSysCall("BasicAudio_Target_LockEnter", ["/*@>164598*/%<::tSimStruct>"], 8, 7, 6, 0, 6, 81),"/*@]*/")>\
%assign ss = ::CompiledModel.System[8]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

/* S-Function (fcgen): '<S139>/Function-Call Generator' incorporates:
 *  SubSystem: '<S139>/DsmWrite'
 */
%endif
/* DataStoreWrite: '<S144>/Data Store Write' incorporates:
 *  Constant: '<S144>/Constant'
 */
%<SLibCG_DumpSSCode("/*@[1644c8*/",SLibCG_SetCSCDW(9, 1, "", -1, "", 0, "0U"),"/*@]*/")>\
%assign   Outputs_open_FunctionCallGenerator_81_0 = ""
%openfile Outputs_open_FunctionCallGenerator_81_0

/* S-Function (fcgen): '<S139>/Function-Call Generator' incorporates:
 *  SubSystem: '<S139>/LockExit'
 */
%closefile Outputs_open_FunctionCallGenerator_81_0

%assign    Outputs_body_FunctionCallGenerator_81_0 = ""
%openfile  Outputs_body_FunctionCallGenerator_81_0

%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[10], "Output",0)
%if SLibCG_SystemFcnArgAccessed("BasicAudio_Target_LockExit",10,0)
%<SLibCG_AccessArg(19 ,0, 0)>
%endif

%<SLibCG_DumpSSCode("/*@[1644aa*/",SLibCGIRGenReusableSysCall("BasicAudio_Target_LockExit", ["/*@>1645c7*/%<::tSimStruct>"], 10, 7, 6, 0, 6, 81),"/*@]*/")>\
%assign ss = ::CompiledModel.System[10]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
%closefile Outputs_body_FunctionCallGenerator_81_0

%assign    Outputs_close_FunctionCallGenerator_81_0 = ""
%openfile  Outputs_close_FunctionCallGenerator_81_0

/* End of Outputs for S-Function (fcgen): '<S139>/Function-Call Generator' */
%closefile Outputs_close_FunctionCallGenerator_81_0
%<SLibCG_DumpSSCode(Outputs_open_FunctionCallGenerator_81_0, Outputs_body_FunctionCallGenerator_81_0, Outputs_close_FunctionCallGenerator_81_0)>

%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[19].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(19, 0, 0)>
%endif
%if SLibCG_ArgAccessed(19, 0, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(19, 0, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void BasicAudio_Target_SetDsm1_g(\
%assign comma = ""
%if SLibCG_ArgAccessed(19, 0, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("BasicAudio_Target_SetDsm1_g", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(19, 0, fcnProtoType)>
%endfunction
